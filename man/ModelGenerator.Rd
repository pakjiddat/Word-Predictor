% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-generator.R
\name{ModelGenerator}
\alias{ModelGenerator}
\title{It is used to generate n-gram models for the given data file.}
\description{
It provides methods that are used for generating n-gram models.
The n-gram models may be customized by specifying the data cleaning and
tokenization options.
}
\details{
It provides a method that generates a n-gram model. The n-gram model
may be customized by specifying the data cleaning and tokenization options.
The data cleaning options include removal of punctuation, stop words, extra
space, non-dictionary words and bad words. The tokenization options include
n-gram number and word stemming.
}
\section{Super class}{
\code{\link[wordpredictor:TextFileProcessor]{wordpredictor::TextFileProcessor}} -> \code{ModelGenerator}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ModelGenerator$new()}}
\item \href{#method-generate_model}{\code{ModelGenerator$generate_model()}}
\item \href{#method-clone}{\code{ModelGenerator$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
It initializes the current object. It is used to set the
maximum n-gram number, sample size, input file name, data cleaner
options, tokenization options, combined transition probabilities file
name and verbose.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelGenerator$new(
  name = NULL,
  desc = NULL,
  fn = NULL,
  df = NULL,
  n = 4,
  ssize = 0.3,
  ddir = "./data",
  mdir = "./models",
  dc_opts = list(),
  tg_opts = list(),
  ve = 0
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The model name.}

\item{\code{desc}}{The model description.}

\item{\code{fn}}{The model file name. If not set, then model.RDS is used.}

\item{\code{df}}{The path of the file used to generate the model. If the
data was cleaned, then df is the path to the cleaned file. It
should be the short file name. It should be present in the data
directory.}

\item{\code{n}}{The maximum n-gram number supported by the model.}

\item{\code{ssize}}{The sample size as a proportion of the input file.}

\item{\code{ddir}}{The data directory.}

\item{\code{mdir}}{The model directory.}

\item{\code{dc_opts}}{The data cleaner options.}

\item{\code{tg_opts}}{The token generator options.}

\item{\code{ve}}{If progress information should be displayed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-generate_model"></a>}}
\if{latex}{\out{\hypertarget{method-generate_model}{}}}
\subsection{Method \code{generate_model()}}{
It generates the model using the current object's attributes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelGenerator$generate_model(rf = F)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{rf}}{If the existing model files should be removed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelGenerator$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
