% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data-cleaner.R
\name{DataCleaner}
\alias{DataCleaner}
\title{Provides data cleaning functionality}
\description{
Allows removing unneeded characters from text files.
}
\details{
It provides a method for cleaning text files. It allows removing bad words,
stop words, non dictionary words, extra space, punctuation and non-alphabet
characters. Converting text to lower case. It supports large text files.
}
\section{Super class}{
\code{\link[wordpredictor:TextFileProcessor]{wordpredictor::TextFileProcessor}} -> \code{DataCleaner}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{dc_opts}}{The options for the data cleaner object.
min_words -> The minimum number of words per sentence.
line_count -> The number of lines to read and clean at a time.
sw_file -> The stop words file path.
bad_file -> The bad words file path.
to_lower -> If the words should be converted to lower case.
remove_stop -> If stop words should be removed.
remove_punct -> If punctuation symbols should be removed.
remove_non_dict -> If non dictionary words should be removed.
remove_non_alpha -> If non alphabet symbols should be removed.
remove_extra_space -> If leading, trailing and double spaces
should be removed.
remove_bad -> If bad words should be removed}

\item{\code{sw}}{The list of stop words.}

\item{\code{bw}}{The list of bad words.}

\item{\code{dw}}{The list of dictionary words.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DataCleaner$new()}}
\item \href{#method-clean_file}{\code{DataCleaner$clean_file()}}
\item \href{#method-clean_lines}{\code{DataCleaner$clean_lines()}}
\item \href{#method-clone}{\code{DataCleaner$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="display_msg">}\href{../../wordpredictor/html/TextFileProcessor.html#method-display_msg}{\code{wordpredictor::TextFileProcessor$display_msg()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="format_size">}\href{../../wordpredictor/html/TextFileProcessor.html#method-format_size}{\code{wordpredictor::TextFileProcessor$format_size()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="post_process">}\href{../../wordpredictor/html/TextFileProcessor.html#method-post_process}{\code{wordpredictor::TextFileProcessor$post_process()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="pre_process">}\href{../../wordpredictor/html/TextFileProcessor.html#method-pre_process}{\code{wordpredictor::TextFileProcessor$pre_process()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="process">}\href{../../wordpredictor/html/TextFileProcessor.html#method-process}{\code{wordpredictor::TextFileProcessor$process()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="process_file">}\href{../../wordpredictor/html/TextFileProcessor.html#method-process_file}{\code{wordpredictor::TextFileProcessor$process_file()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="read_file">}\href{../../wordpredictor/html/TextFileProcessor.html#method-read_file}{\code{wordpredictor::TextFileProcessor$read_file()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="read_lines">}\href{../../wordpredictor/html/TextFileProcessor.html#method-read_lines}{\code{wordpredictor::TextFileProcessor$read_lines()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="read_obj">}\href{../../wordpredictor/html/TextFileProcessor.html#method-read_obj}{\code{wordpredictor::TextFileProcessor$read_obj()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="save_obj">}\href{../../wordpredictor/html/TextFileProcessor.html#method-save_obj}{\code{wordpredictor::TextFileProcessor$save_obj()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wordpredictor" data-topic="TextFileProcessor" data-id="write_file">}\href{../../wordpredictor/html/TextFileProcessor.html#method-write_file}{\code{wordpredictor::TextFileProcessor$write_file()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
It initializes the current object. It is used to set the file name
and verbose options.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataCleaner$new(file_name = NULL, opts = list(), verbose = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file_name}}{The path to the file to clean.}

\item{\code{opts}}{The options for data cleaning.
min_words -> The minimum number of words per sentence.
line_count -> The number of lines to read and clean at a time.
sw_file -> The stop words file path.
bad_file -> The bad words file path.
to_lower -> If the words should be converted to lower case.
remove_stop -> If stop words should be removed.
remove_punct -> If punctuation symbols should be removed.
remove_non_dict -> If non dictionary words should be removed.
remove_non_alpha -> If non alphabet symbols should be removed.
remove_extra_space -> If leading, trailing and double spaces
should be removed.
remove_bad -> If bad words should be removed}

\item{\code{verbose}}{Indicates if progress information should be displayed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clean_file"></a>}}
\if{latex}{\out{\hypertarget{method-clean_file}{}}}
\subsection{Method \code{clean_file()}}{
It removes unneeded characters from the given text with
several options. It allows removing punctuations, numbers, symbols,
urls and separators. It allows removing bad words, stop words and
words not in the given dictionary file. It reads the given file one
line at a time, removing unneeded characters. After every line_count
number of lines, the cleaned lines are saved to the output file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataCleaner$clean_file()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clean_lines"></a>}}
\if{latex}{\out{\hypertarget{method-clean_lines}{}}}
\subsection{Method \code{clean_lines()}}{
It cleans the given lines of text using the options
passed to the current object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataCleaner$clean_lines(lines)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lines}}{The input sentences.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The cleaned lines of text.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataCleaner$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
